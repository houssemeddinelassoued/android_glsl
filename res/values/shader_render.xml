<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="shader_render_scene_vs">
        uniform mat4 uMVPMatrix;
        
        attribute vec3 aPosition;
        attribute vec3 aColor;
        
        varying vec4 vColor;
        varying vec4 vPos;
        
        void main() {
            gl_Position = uMVPMatrix * vec4(aPosition, 1.0);
            vColor = vec4(aColor, 1.0);
            vColor.a = gl_Position.z / gl_Position.w;
            
            vPos = gl_Position;            
        }
    </string>
    
    <string name="shader_render_scene_fs">
        precision mediump float;
        uniform sampler2D sTexture;
        varying vec4 vColor;
        varying vec4 vPos;
        
        void main() {
            vec2 pos = vPos.xy / vPos.w;
            pos = (pos + 1.0) * 0.5;
            gl_FragColor = texture2D(sTexture, pos) * vColor;
            gl_FragColor.a = vColor.a;
            /*
            gl_FragColor.rgb = vec3(vColor.a);
            */
        }
    </string>
    
    <string name="shader_render_light_vs">
        uniform mat4 uMVMatrix;
        uniform mat4 uMVPMatrix;
        uniform mat4 uNormalMatrix;
        uniform vec3 uLightPos;
        
        attribute vec3 aPosition;
        attribute vec3 aNormal;
        
        varying vec4 vColor;
        varying vec4 vPos;
        
        void main() {
            gl_Position = uMVPMatrix * vec4(aPosition, 1.0);
            vec4 mvPos = uMVMatrix * vec4(aPosition, 1.0);
            
            vec3 normal = (uNormalMatrix * vec4(aNormal, 0.0)).xyz;
            normal = normalize(normal);
            
            vec3 lightNormal = uLightPos - mvPos.xyz;
            lightNormal = normalize(lightNormal);
            
            vColor = vec4(dot(normal, lightNormal));
            vColor = clamp(vColor, 0.0, 1.0);
            
            vPos = gl_Position;
        }
    </string>
    
    <string name="shader_render_light_fs">
        precision mediump float;
        uniform sampler2D sTexture;
        varying vec4 vColor;
        varying vec4 vPos;
        
        void main() {
            vec2 pos = vPos.xy / vPos.w;
            pos = (pos + 1.0) * 0.5;
            gl_FragColor = texture2D(sTexture, pos) + vColor;
        }
    </string>
    
</resources>