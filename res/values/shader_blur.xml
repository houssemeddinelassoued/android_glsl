<?xml version="1.0" encoding="utf-8"?>
<resources>

	<string name="shader_blur_vertex">
		attribute vec4 aPosition;
		attribute vec2 aTextureCoord;
		varying vec2 vTextureCoord;
		
		void main() {
			gl_Position = aPosition;
			vTextureCoord = aTextureCoord;
		}
    </string>

	<string name="shader_blur_fragment">
	    precision mediump float;
		varying vec2 vTextureCoord;
        uniform sampler2D sTexture;
        		
        void main() {
        
        	gl_FragColor = texture2D(sTexture, vTextureCoord);       		
        	float kernel = 0.02 * pow(gl_FragColor.a, 3.0);
        	
        	int div = 3;
        	float weight = 1.0 / float(div * div * 3);
        	
			gl_FragColor = vec4(0);
			
			vec2 skew1 = vec2(vTextureCoord);
			vec2 skew2 = vec2(vTextureCoord);
			vec2 skew3 = vec2(vTextureCoord);
						
			float d1 = kernel / float(div - 1);
			float d2 = d1 * 0.577350269189;
			
			vec2 mov1 = vec2(-d1, -d2);
			vec2 mov2 = vec2(d1, -d2);
			vec2 mov3 = vec2(d1, -d2);
			
			vec2 mov11 = vec2(0, d1);
			vec2 mov22 = vec2(0, d1);
			vec2 mov33 = vec2(-d1, -d2);
			
			for (int i=0; i &lt; div; ++i) {
				vec2 pos1 = vec2(skew1);
				vec2 pos2 = vec2(skew2);
				vec2 pos3 = vec2(skew3);
			
				for (int j=0; j &lt; div; ++j) {				
					gl_FragColor += texture2D(sTexture, pos1) * weight;
					gl_FragColor += texture2D(sTexture, pos2) * weight;
					gl_FragColor += texture2D(sTexture, pos3) * weight;
				
					pos1 += mov11;
					pos2 += mov22;
					pos3 += mov33;
				}
				
				skew1 += mov1;
				skew2 += mov2;
				skew3 += mov3;				
			}
		}
    </string>
    
</resources>
