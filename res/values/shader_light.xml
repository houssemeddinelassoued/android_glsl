<?xml version="1.0" encoding="utf-8"?>
<resources>
    <string name="shader_light_vertex">
        uniform mat4 uMVMatrix;
		uniform mat4 uMVPMatrix;
		uniform mat4 uNormalMatrix;
		uniform vec3 uLightPos;
		
		attribute vec3 aPosition;
		attribute vec3 aNormal;
		
		varying vec4 vColor;
		varying vec2 vPos;
		
		void main() {
			gl_Position = uMVPMatrix * vec4(aPosition, 1.0);
			vec4 mvPos = uMVMatrix * vec4(aPosition, 1.0);
			
			vec3 normal = (uNormalMatrix * vec4(aNormal, 0.0)).xyz;
			normal = normalize(normal);
			
			vec3 lightNormal = uLightPos - mvPos.xyz;
			lightNormal = normalize(lightNormal);
			
			vColor = vec4(dot(normal, lightNormal));
			vColor = clamp(vColor, 0.0, 1.0);
			
			vPos = gl_Position.xy / gl_Position.w;
			vPos = (vPos + 1.0) * 0.5;
		}
    </string>
    
    <string name="shader_light_fragment">
	    precision mediump float;
        uniform sampler2D sTexture;
        varying vec4 vColor;
        varying vec2 vPos;
        
        void main() {
        	gl_FragColor = texture2D(sTexture, vPos) + vColor;
		}
    </string>
    
</resources>