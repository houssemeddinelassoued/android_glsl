<?xml version="1.0" encoding="utf-8"?>
<resources>

    <string name="shader_bokeh_vertex">
		attribute vec4 aPosition;
		attribute vec2 aTextureCoord;
		varying vec2 vTextureCoord;
		
		void main() {
			gl_Position = aPosition;
			vTextureCoord = aTextureCoord;
		}
    </string>
    
    <string name="shader_bokeh_pow_fragment">
	    precision mediump float;
  		uniform sampler2D sTexture0;
  		uniform float uPower;
        varying vec2 vTextureCoord;
        
        void main() {
        	vec4 color = texture2D(sTexture0, vTextureCoord);
        	color = pow(color, vec4(uPower));
        	gl_FragColor = color;
        }
    </string>
    
    <string name="shader_bokeh1_fragment">
	    precision mediump float;
  		uniform sampler2D sTexture0;
		uniform vec2 uDelta0;
		varying vec2 vTextureCoord;
		
		void main() {
			gl_FragColor = vec4(0.0);
			float total = 5.0;
			for (float t = 0.0; t &lt;= total; t++) {
				float percent = (t + 0.5) / total;
				gl_FragColor += texture2D(sTexture0, vTextureCoord + uDelta0 * percent);
			}
			gl_FragColor /= total;
		}
    </string>
        
    <string name="shader_bokeh2_fragment">
	    precision highp float;
		uniform sampler2D sTexture0;
		uniform sampler2D sTexture1;
		uniform vec2 uDelta0;
		varying vec2 vTextureCoord;
		
		void main() {
			gl_FragColor = vec4(0.0);
			float total = 5.0;
			for (float t = 0.0; t &lt;= total; t++) {
				float percent = (t + 0.5) / total;
				gl_FragColor += texture2D(sTexture0, vTextureCoord + uDelta0 * percent);
			}
			gl_FragColor /= total;
			gl_FragColor = (gl_FragColor + texture2D(sTexture1, vTextureCoord)) * 0.5;
		}
    </string>
    
    <string name="shader_bokeh3_fragment">
	    precision highp float;
		uniform sampler2D sTexture0;
		uniform sampler2D sTexture1;
		uniform vec2 uDelta0;
		uniform vec2 uDelta1;
		varying vec2 vTextureCoord;
		
		void main() {
			gl_FragColor = vec4(0.0);
			float total = 5.0;
			for (float t = 0.0; t &lt;= total; t++) {
				float percent = (t + 0.5) / total;
				gl_FragColor += texture2D(sTexture0, vTextureCoord + uDelta0 * percent);
			}
			for (float t = 0.0; t &lt;= total; t++) {
				float percent = (t + 0.5) / total;
				gl_FragColor += texture2D(sTexture1, vTextureCoord + uDelta1 * percent);
			}
			gl_FragColor /= total * 2.0;
		}
    </string>
        
</resources>
